[{"C:\\sites\\juno\\bootcamp\\projects\\project6\\project6AmandaHansChristianBenZahra\\src\\index.js":"1","C:\\sites\\juno\\bootcamp\\projects\\project6\\project6AmandaHansChristianBenZahra\\src\\reportWebVitals.js":"2","C:\\sites\\juno\\bootcamp\\projects\\project6\\project6AmandaHansChristianBenZahra\\src\\App.js":"3","C:\\sites\\juno\\bootcamp\\projects\\project6\\project6AmandaHansChristianBenZahra\\src\\firebase.js":"4","C:\\sites\\juno\\bootcamp\\projects\\project6\\project6AmandaHansChristianBenZahra\\src\\components\\Header.js":"5","C:\\sites\\juno\\bootcamp\\projects\\project6\\project6AmandaHansChristianBenZahra\\src\\components\\Footer.js":"6","C:\\sites\\juno\\bootcamp\\projects\\project6\\project6AmandaHansChristianBenZahra\\src\\components\\SearchGifs.js":"7","C:\\sites\\juno\\bootcamp\\projects\\project6\\project6AmandaHansChristianBenZahra\\src\\components\\Home.js":"8","C:\\sites\\juno\\bootcamp\\projects\\project6\\project6AmandaHansChristianBenZahra\\src\\components\\DisplayMeme.js":"9","C:\\sites\\juno\\bootcamp\\projects\\project6\\project6AmandaHansChristianBenZahra\\src\\components\\MemeCreator.js":"10","C:\\sites\\juno\\bootcamp\\projects\\project6\\project6AmandaHansChristianBenZahra\\src\\components\\UserMeme.js":"11"},{"size":494,"mtime":1607391402992,"results":"12","hashOfConfig":"13"},{"size":375,"mtime":1607391402993,"results":"14","hashOfConfig":"13"},{"size":2316,"mtime":1607610570986,"results":"15","hashOfConfig":"13"},{"size":607,"mtime":1607391402992,"results":"16","hashOfConfig":"13"},{"size":401,"mtime":1607632596867,"results":"17","hashOfConfig":"13"},{"size":198,"mtime":1607467470271,"results":"18","hashOfConfig":"13"},{"size":6775,"mtime":1607650791640,"results":"19","hashOfConfig":"13"},{"size":646,"mtime":1607619912129,"results":"20","hashOfConfig":"13"},{"size":3578,"mtime":1607632596866,"results":"21","hashOfConfig":"13"},{"size":5653,"mtime":1607650791639,"results":"22","hashOfConfig":"13"},{"size":1587,"mtime":1607632596870,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1qq3601",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\sites\\juno\\bootcamp\\projects\\project6\\project6AmandaHansChristianBenZahra\\src\\index.js",[],["49","50"],"C:\\sites\\juno\\bootcamp\\projects\\project6\\project6AmandaHansChristianBenZahra\\src\\reportWebVitals.js",[],"C:\\sites\\juno\\bootcamp\\projects\\project6\\project6AmandaHansChristianBenZahra\\src\\App.js",["51","52","53","54"],"\r\nimport { Component, Fragment } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport firebase from \"./firebase.js\";\r\nimport \"./styles/App.scss\";\r\nimport axios from \"axios\";\r\nimport Header from \"./components/Header.js\";\r\nimport MemeCreator from \"./components/MemeCreator.js\";\r\nimport DisplayMeme from \"./components/DisplayMeme\";\r\nimport Footer from \"./components/Footer.js\";\r\nimport SearchGifs from \"./components/SearchGifs.js\";\r\nimport Home from \"./components/Home\";\r\n\r\n\r\n/* \r\nComponents to create: \r\nMeme Creation Page\r\n  - User query to get results and display images\r\n    - if no results get found let user know\r\n  - Limit results to 10 \r\n  - When user selects Gif to create meme, window pops open with form and gif\r\n  Custom Meme Component\r\n  - Form has three inputs *all required, and submit button \r\n    - Top text, bottom text, tag(s)\r\n  - On submit, prevent default behaviour and display on page \r\n    - Redirect user to the meme viewing section \r\n    \r\n    \r\nMeme Viewing Section:\r\n  Component for Customized Finished Meme:   \r\n      - User can upvotebpm / downvote\r\n        - Total votes are displayed\r\n      - Save meme for later ( STRETCH GOAL )\r\n  Gallery View on Meme Viewing Section: \r\n    - User query based off of title and tags entered during meme creation \r\n    - display memes onto page based off of the search query above\r\n    - \r\n*/\r\n\r\n\r\nclass App extends Component{\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n\r\n    }\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    const dbRef = firebase.database().ref();\r\n\r\n    console.log(`This is your firebase database:`, dbRef);\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n\r\n      <Router>\r\n        {/* HEADER SECTION */}\r\n\r\n        {/* <img src={ this.state.images } alt=\"\"/>\r\n        {/* <SearchGifs /> */}\r\n        {/* <img src={this.state.images} alt=\"\" /> */}\r\n        {/* <Route exact path=\"/\" component={ } />\r\n          <Route path=\"\" component ={ } /> */}\r\n\r\n        {/* <Create /> */}\r\n        {/* <DisplayMeme /> */}\r\n\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route path=\"/memecreator\" component={SearchGifs} />\r\n        <Route path=\"/search\" component={DisplayMeme} />\r\n\r\n        {/* FOOTER SECTION */}\r\n\r\n        <Footer />\r\n\r\n      </Router>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n","C:\\sites\\juno\\bootcamp\\projects\\project6\\project6AmandaHansChristianBenZahra\\src\\firebase.js",[],"C:\\sites\\juno\\bootcamp\\projects\\project6\\project6AmandaHansChristianBenZahra\\src\\components\\Header.js",[],"C:\\sites\\juno\\bootcamp\\projects\\project6\\project6AmandaHansChristianBenZahra\\src\\components\\Footer.js",[],"C:\\sites\\juno\\bootcamp\\projects\\project6\\project6AmandaHansChristianBenZahra\\src\\components\\SearchGifs.js",["55","56"],"C:\\sites\\juno\\bootcamp\\projects\\project6\\project6AmandaHansChristianBenZahra\\src\\components\\Home.js",[],"C:\\sites\\juno\\bootcamp\\projects\\project6\\project6AmandaHansChristianBenZahra\\src\\components\\DisplayMeme.js",["57"],"C:\\sites\\juno\\bootcamp\\projects\\project6\\project6AmandaHansChristianBenZahra\\src\\components\\MemeCreator.js",["58"],"\r\nimport { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport firebase from '../firebase.js';\r\n\r\nclass MemeCreator extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            userMemes:'',\r\n            userTopText: '',\r\n            userBottomText: '',\r\n            likes: 0,\r\n            dislikes: 0,\r\n            total: 0\r\n        }\r\n    }\r\n\r\n    handleInputChangeTopText = (e) => {\r\n        this.setState({\r\n            userTopText: e.target.value\r\n        })\r\n    }\r\n\r\n    handleInputChangeBottomText = (e) => {\r\n        this.setState({\r\n            userBottomText: e.target.value\r\n        })\r\n    }\r\n\r\n    userGeneratedMemes = (e) =>{\r\n        e.preventDefault();\r\n\r\n        const dbRef = firebase.database().ref();\r\n\r\n        const time = document.getElementById('date').value = Date();\r\n\r\n        const userTagsInput = this.tags.value;\r\n        const userMemeTags = userTagsInput.split(/[\\s,]+/);\r\n        const userMeme = {\r\n            memeImage:this.props.gifUrlProps,\r\n            memeAltText:this.props.gifAltProps,\r\n            memeDate:time,\r\n            memeTopText:this.topText.value,\r\n            memeBottomText:this.bottomText.value,\r\n            memeTags:userMemeTags,\r\n            memeLikes:this.state.likes,\r\n            memeDislikes: this.state.dislikes, \r\n            memeTotalVotes:this.state.total,\r\n        }\r\n\r\n        this.topText.value = ''\r\n        this.bottomText.value = ''\r\n        this.tags.value = ''\r\n\r\n        dbRef.push(userMeme);\r\n\r\n        this.setState({\r\n            userMemes:userMeme,\r\n        })\r\n    }\r\n\r\n    hideCreateMemeSection = (e) => {\r\n        if (e.target.id === \"createMemeSection\") {\r\n            document.getElementById(\"createMemeSection\").style.display = \"none\";\r\n            document.getElementById('header').style.display = 'flex';\r\n            document.getElementById('displayedGifsId').style.marginTop = '20px'; \r\n            document.getElementById('searchGifId').style.display = 'flex';\r\n            document.getElementById('root').style.backgroundColor = 'rgb(40,40,40)';\r\n        }\r\n    }\r\n\r\n    closeMemeSection = () => {\r\n        document.getElementById(\"createMemeSection\").style.display = \"none\";\r\n        document.getElementById('header').style.display = 'flex';\r\n        document.getElementById('displayedGifsId').style.marginTop = '20px';\r\n        document.getElementById('searchGifId').style.display = 'flex';\r\n        document.getElementById('root').style.backgroundColor = 'rgb(40,40,40)';\r\n    }\r\n\r\n    clearMemeForm = () =>{\r\n\r\n        document.getElementById(\"selectedGif\").style.display = \"none\";\r\n        document.getElementById(\"createMemeForm\").style.display = \"none\";\r\n        document.getElementById('displayedGifsId').style.marginTop = '20px';\r\n        document.getElementById('searchGifId').style.display = 'flex';\r\n        document.getElementById('postCreationMeme').style.display = 'block';\r\n\r\n        // alert(`You just created a meme!` );\r\n\r\n        // document.getElementById(\"gifAndForm\").text(<a href=\"#\">Click here to view your meme!</a>)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n\r\n            <div className=\"createMemeSection\" id=\"createMemeSection\" onClick={this.hideCreateMemeSection}>\r\n\r\n                <div className=\"wrapperCreateMemePage\">\r\n                    <div className=\"buttonContainer\">\r\n                        <button className=\"closeMemeButton\" onClick={this.closeMemeSection}>X</button>\r\n                    </div>\r\n\r\n                    <div className=\"gifAndForm\" id=\"gifAndForm\">\r\n\r\n                        <div className=\"selectedGif\" id=\"selectedGif\">\r\n                            <h5 className=\"memeText memeTextTop\">{this.state.userTopText}</h5>\r\n                            <img src={this.props.gifUrlProps} alt={this.props.gifAltProps} />\r\n                            <h5 className=\"memeText memeTextBottom\">{this.state.userBottomText}</h5>\r\n                        </div>\r\n\r\n                        <div id=\"postCreationMeme\">\r\n                            <Link to={\"/search\"}>\r\n                                <button className=\"glow-on-hover\" type=\"button\">\r\n                                    Search Memes!\r\n                                </button>\r\n                            </Link>\r\n                        </div>\r\n\r\n                        <form action=\"\" onSubmit={this.userGeneratedMemes} className=\"createMemeForm\" id=\"createMemeForm\">\r\n\r\n                            <input className=\"srOnly\" id=\"date\" name=\"date\" className=\"hiddenDate\"></input>\r\n\r\n                            <label htmlFor=\"topText\">Top Text</label>\r\n                            <input type=\"text\" id=\"topText\" className=\"userInput\" required placeholder=\"Top Text\" maxLength=\"30\" ref={top => this.topText = top} onChange={this.handleInputChangeTopText}/>\r\n\r\n                            <label htmlFor=\"bottomText\">Bottom Text</label>\r\n                            <input type=\"text\" id=\"bottomText\" className=\"userInput\" required placeholder=\"Bottom Text\" maxLength=\"30\" ref={bottom => this.bottomText = bottom} onChange={this.handleInputChangeBottomText}/>\r\n\r\n                            <label htmlFor=\"tags\">Tags</label>\r\n                            <input type=\"text\" id=\"tags\" className=\"userInput\" required placeholder=\"Separate tags by commas or spaces\" ref={tags => this.tags = tags} />\r\n\r\n                            <input type=\"submit\" className=\"submit\" value=\"Submit!\" onClick={this.clearMemeForm}></input>\r\n                        </form>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MemeCreator;\r\n","C:\\sites\\juno\\bootcamp\\projects\\project6\\project6AmandaHansChristianBenZahra\\src\\components\\UserMeme.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":2,"column":21,"nodeType":"65","messageId":"66","endLine":2,"endColumn":29},{"ruleId":"63","severity":1,"message":"67","line":6,"column":8,"nodeType":"65","messageId":"66","endLine":6,"endColumn":13},{"ruleId":"63","severity":1,"message":"68","line":7,"column":8,"nodeType":"65","messageId":"66","endLine":7,"endColumn":14},{"ruleId":"63","severity":1,"message":"69","line":8,"column":8,"nodeType":"65","messageId":"66","endLine":8,"endColumn":19},{"ruleId":"63","severity":1,"message":"70","line":3,"column":27,"nodeType":"65","messageId":"66","endLine":3,"endColumn":33},{"ruleId":"63","severity":1,"message":"71","line":3,"column":35,"nodeType":"65","messageId":"66","endLine":3,"endColumn":40},{"ruleId":"63","severity":1,"message":"72","line":4,"column":10,"nodeType":"65","messageId":"66","endLine":4,"endColumn":25},{"ruleId":"73","severity":1,"message":"74","line":118,"column":77,"nodeType":"75","endLine":118,"endColumn":99},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'Header' is defined but never used.","'MemeCreator' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'FontAwesomeIcon' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]