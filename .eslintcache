[{"C:\\Users\\a3mon\\OneDrive\\Desktop\\JunoBootcampFall2020\\Projects\\project6AmandaHansChristianBenZahra\\src\\index.js":"1","C:\\Users\\a3mon\\OneDrive\\Desktop\\JunoBootcampFall2020\\Projects\\project6AmandaHansChristianBenZahra\\src\\reportWebVitals.js":"2","C:\\Users\\a3mon\\OneDrive\\Desktop\\JunoBootcampFall2020\\Projects\\project6AmandaHansChristianBenZahra\\src\\App.js":"3","C:\\Users\\a3mon\\OneDrive\\Desktop\\JunoBootcampFall2020\\Projects\\project6AmandaHansChristianBenZahra\\src\\components\\Footer.js":"4","C:\\Users\\a3mon\\OneDrive\\Desktop\\JunoBootcampFall2020\\Projects\\project6AmandaHansChristianBenZahra\\src\\components\\SearchGifs.js":"5","C:\\Users\\a3mon\\OneDrive\\Desktop\\JunoBootcampFall2020\\Projects\\project6AmandaHansChristianBenZahra\\src\\components\\DisplayMeme.js":"6","C:\\Users\\a3mon\\OneDrive\\Desktop\\JunoBootcampFall2020\\Projects\\project6AmandaHansChristianBenZahra\\src\\components\\Home.js":"7","C:\\Users\\a3mon\\OneDrive\\Desktop\\JunoBootcampFall2020\\Projects\\project6AmandaHansChristianBenZahra\\src\\components\\Header.js":"8","C:\\Users\\a3mon\\OneDrive\\Desktop\\JunoBootcampFall2020\\Projects\\project6AmandaHansChristianBenZahra\\src\\components\\MemeCreator.js":"9","C:\\Users\\a3mon\\OneDrive\\Desktop\\JunoBootcampFall2020\\Projects\\project6AmandaHansChristianBenZahra\\src\\firebase.js":"10","C:\\Users\\a3mon\\OneDrive\\Desktop\\JunoBootcampFall2020\\Projects\\project6AmandaHansChristianBenZahra\\src\\components\\UserMeme.js":"11"},{"size":494,"mtime":1607391493872,"results":"12","hashOfConfig":"13"},{"size":375,"mtime":1607391493873,"results":"14","hashOfConfig":"13"},{"size":1573,"mtime":1607659732597,"results":"15","hashOfConfig":"13"},{"size":460,"mtime":1607648204160,"results":"16","hashOfConfig":"13"},{"size":9304,"mtime":1607662055807,"results":"17","hashOfConfig":"13"},{"size":5025,"mtime":1607663320547,"results":"18","hashOfConfig":"13"},{"size":817,"mtime":1607662352785,"results":"19","hashOfConfig":"13"},{"size":494,"mtime":1607659732605,"results":"20","hashOfConfig":"13"},{"size":6373,"mtime":1607662352789,"results":"21","hashOfConfig":"13"},{"size":607,"mtime":1607391493870,"results":"22","hashOfConfig":"13"},{"size":1854,"mtime":1607659732612,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"i38qo",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"39"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\a3mon\\OneDrive\\Desktop\\JunoBootcampFall2020\\Projects\\project6AmandaHansChristianBenZahra\\src\\index.js",[],"C:\\Users\\a3mon\\OneDrive\\Desktop\\JunoBootcampFall2020\\Projects\\project6AmandaHansChristianBenZahra\\src\\reportWebVitals.js",[],"C:\\Users\\a3mon\\OneDrive\\Desktop\\JunoBootcampFall2020\\Projects\\project6AmandaHansChristianBenZahra\\src\\App.js",[],"C:\\Users\\a3mon\\OneDrive\\Desktop\\JunoBootcampFall2020\\Projects\\project6AmandaHansChristianBenZahra\\src\\components\\Footer.js",[],"C:\\Users\\a3mon\\OneDrive\\Desktop\\JunoBootcampFall2020\\Projects\\project6AmandaHansChristianBenZahra\\src\\components\\SearchGifs.js",[],"C:\\Users\\a3mon\\OneDrive\\Desktop\\JunoBootcampFall2020\\Projects\\project6AmandaHansChristianBenZahra\\src\\components\\DisplayMeme.js",[],"C:\\Users\\a3mon\\OneDrive\\Desktop\\JunoBootcampFall2020\\Projects\\project6AmandaHansChristianBenZahra\\src\\components\\Home.js",["49"],"import { Component } from \"react\";\r\nimport Header from \"./Header\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n\r\n      <div className=\"fillScreen\">\r\n\r\n        <div className=\"fixHeaderText\">\r\n          <Header headerText=\"Meme in a Giffy\" subheaderText=\"\" />\r\n        </div>\r\n\r\n        <main className=\"landingPageHome\">\r\n\r\n          <Link to={\"/search\"}>\r\n            <button className=\"glow-on-hover homeButton\" type=\"button\">\r\n              Search Memes!\r\n          </button>\r\n          </Link>\r\n\r\n          <Link to={\"/memecreator\"}>\r\n            <button className=\"glow-on-hover homeButton\" type=\"button\">\r\n              Create Memes!\r\n          </button>\r\n          </Link>\r\n\r\n        </main>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n",["50","51"],"C:\\Users\\a3mon\\OneDrive\\Desktop\\JunoBootcampFall2020\\Projects\\project6AmandaHansChristianBenZahra\\src\\components\\Header.js",[],"C:\\Users\\a3mon\\OneDrive\\Desktop\\JunoBootcampFall2020\\Projects\\project6AmandaHansChristianBenZahra\\src\\components\\MemeCreator.js",["52"],"\r\nimport { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport firebase from '../firebase.js';\r\n\r\nclass MemeCreator extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            userMemes:'',\r\n            userTopText: '',\r\n            userBottomText: '',\r\n            likes: 0,\r\n            dislikes: 0,\r\n            total: 0\r\n        }\r\n    }\r\n\r\n    // What gets added to the top of the image by the user\r\n    handleInputChangeTopText = (e) => {\r\n        this.setState({\r\n            userTopText: e.target.value\r\n        })\r\n    }\r\n\r\n    // What gets added to the bottom of the image by the user\r\n    handleInputChangeBottomText = (e) => {\r\n        this.setState({\r\n            userBottomText: e.target.value\r\n        })\r\n    }\r\n\r\n    userGeneratedMemes = (e) =>{\r\n        e.preventDefault();\r\n\r\n        const dbRef = firebase.database().ref();\r\n\r\n        const time = document.getElementById('date').value = Date();\r\n\r\n        const userTagsInput = this.tags.value;\r\n        const userMemeTags = userTagsInput.split(/[\\s,]+/);\r\n\r\n        // The data that gets pushed to the firebase database\r\n        const userMeme = {\r\n            memeImage:this.props.gifUrlProps,\r\n            memeAltText:this.props.gifAltProps,\r\n            memeDate:time,\r\n            memeTopText:this.topText.value,\r\n            memeBottomText:this.bottomText.value,\r\n            memeTags:userMemeTags,\r\n            memeLikes:this.state.likes,\r\n            memeDislikes: this.state.dislikes, \r\n            memeTotalVotes:this.state.total,\r\n        }\r\n\r\n        this.topText.value = ''\r\n        this.bottomText.value = ''\r\n        this.tags.value = ''\r\n\r\n        dbRef.push(userMeme);\r\n\r\n        this.setState({\r\n            userMemes:userMeme,\r\n        })\r\n\r\n        // clear the elements associated with the create meme page and display the button allowing user to view created meme\r\n        // fires when user submits their created meme\r\n        document.getElementById(\"selectedGif\").style.display = \"none\";\r\n        document.getElementById(\"createMemeForm\").style.display = \"none\";\r\n        document.getElementById('displayedGifsId').style.marginTop = '20px';\r\n        document.getElementById('searchGifId').style.display = 'flex';\r\n        document.getElementById('postCreationMeme').style.display = 'flex';\r\n    }\r\n\r\n    // function to hide the create meme section. function fires when user selects anywhere on the screen that is NOT in the create meme section\r\n    hideCreateMemeSection = (e) => {\r\n        if (e.target.id === \"createMemeSection\") {\r\n            this.closeMemeSection();\r\n        }\r\n    }\r\n\r\n    // function that runs to hide everything create meme related, and show everything that's relevant to the search gif page, fires when user selects the X button\r\n    closeMemeSection = () => {\r\n        document.getElementById(\"createMemeSection\").style.display = \"none\";\r\n        document.getElementById('header').style.display = 'block';\r\n        document.getElementById('displayedGifsId').style.marginTop = '20px';\r\n        document.getElementById('searchGifId').style.display = 'flex';\r\n    }\r\n\r\n    clearMemeForm = () =>{\r\n        document.getElementById(\"selectedGif\").style.display = \"none\";\r\n        document.getElementById(\"createMemeForm\").style.display = \"none\";\r\n        document.getElementById('displayedGifsId').style.marginTop = '20px';\r\n        document.getElementById('searchGifId').style.display = 'flex';\r\n        document.getElementById('postCreationMeme').style.display = 'block';\r\n    }\r\n\r\n    render(){\r\n        return(\r\n\r\n            <div className=\"createMemeSection\" id=\"createMemeSection\" onClick={this.hideCreateMemeSection}>\r\n\r\n                <div className=\"wrapperCreateMemePage\">\r\n                    <div className=\"buttonContainer\">\r\n                        <button className=\"closeMemeButton\" onClick={this.closeMemeSection}>X</button>\r\n                    </div>\r\n\r\n                    <div className=\"gifAndForm\" id=\"gifAndForm\">\r\n\r\n                        <div className=\"selectedGif\" id=\"selectedGif\">\r\n                            <h5 className=\"memeText memeTextTop\">{this.state.userTopText}</h5>\r\n                            <img src={this.props.gifUrlProps} alt={this.props.gifAltProps} />\r\n                            <h5 className=\"memeText memeTextBottom\">{this.state.userBottomText}</h5>\r\n                        </div>\r\n\r\n                        {/* post creation screen - gets displayed after user submits meme */}\r\n                        <div className=\"postCreationMeme\" id=\"postCreationMeme\">\r\n                            <p className=\"creatingMemeText\">⚙ Creating Your Meme Now ⚙</p>\r\n                            <Link to={\"/search\"}>                         \r\n                                <button className=\"glow-on-hover searchGifButton\" type=\"button\">\r\n                                    View your Meme!\r\n                                </button>\r\n                            </Link>\r\n                        </div>\r\n\r\n                        <form action=\"\" onSubmit={this.userGeneratedMemes}                      \r\n                        className=\"createMemeForm\" id=\"createMemeForm\">\r\n\r\n                            <input className=\"srOnly\" id=\"date\" name=\"date\" className=\"hiddenDate\"></input>\r\n\r\n                            <label htmlFor=\"topText\">Top Text</label>\r\n                            <input type=\"text\" id=\"topText\" className=\"userInput\" required placeholder=\"Top Text\" maxLength=\"30\" ref={top => this.topText = top} onChange={this.handleInputChangeTopText}/>\r\n\r\n                            <label htmlFor=\"bottomText\">Bottom Text</label>\r\n                            <input type=\"text\" id=\"bottomText\" className=\"userInput\" required placeholder=\"Bottom Text\" maxLength=\"30\" ref={bottom => this.bottomText = bottom} onChange={this.handleInputChangeBottomText}/>\r\n\r\n                            <label htmlFor=\"tags\">Tags</label>\r\n                            <input type=\"text\" id=\"tags\" className=\"userInput\" required placeholder=\"Separate tags by commas or spaces\" ref={tags => this.tags = tags} />\r\n\r\n                            <input type=\"submit\" className=\"submit\" value=\"Submit!\" ></input>\r\n                        </form>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MemeCreator;\r\n","C:\\Users\\a3mon\\OneDrive\\Desktop\\JunoBootcampFall2020\\Projects\\project6AmandaHansChristianBenZahra\\src\\firebase.js",[],"C:\\Users\\a3mon\\OneDrive\\Desktop\\JunoBootcampFall2020\\Projects\\project6AmandaHansChristianBenZahra\\src\\components\\UserMeme.js",[],{"ruleId":"53","severity":1,"message":"54","line":1,"column":21,"nodeType":"55","messageId":"56","endLine":1,"endColumn":29},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":129,"column":77,"nodeType":"63","endLine":129,"endColumn":99},"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","no-native-reassign",["64"],"no-negated-in-lhs",["65"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]