[{"C:\\sites\\juno\\bootcamp\\projects\\project6\\project6AmandaHansChristianBenZahra\\src\\index.js":"1","C:\\sites\\juno\\bootcamp\\projects\\project6\\project6AmandaHansChristianBenZahra\\src\\reportWebVitals.js":"2","C:\\sites\\juno\\bootcamp\\projects\\project6\\project6AmandaHansChristianBenZahra\\src\\App.js":"3","C:\\sites\\juno\\bootcamp\\projects\\project6\\project6AmandaHansChristianBenZahra\\src\\firebase.js":"4","C:\\sites\\juno\\bootcamp\\projects\\project6\\project6AmandaHansChristianBenZahra\\src\\components\\Header.js":"5","C:\\sites\\juno\\bootcamp\\projects\\project6\\project6AmandaHansChristianBenZahra\\src\\components\\Footer.js":"6","C:\\sites\\juno\\bootcamp\\projects\\project6\\project6AmandaHansChristianBenZahra\\src\\components\\SearchGifs.js":"7","C:\\sites\\juno\\bootcamp\\projects\\project6\\project6AmandaHansChristianBenZahra\\src\\components\\Home.js":"8","C:\\sites\\juno\\bootcamp\\projects\\project6\\project6AmandaHansChristianBenZahra\\src\\components\\DisplayMeme.js":"9","C:\\sites\\juno\\bootcamp\\projects\\project6\\project6AmandaHansChristianBenZahra\\src\\components\\MemeCreator.js":"10","C:\\sites\\juno\\bootcamp\\projects\\project6\\project6AmandaHansChristianBenZahra\\src\\components\\UserMeme.js":"11"},{"size":494,"mtime":1607391402992,"results":"12","hashOfConfig":"13"},{"size":375,"mtime":1607391402993,"results":"14","hashOfConfig":"13"},{"size":1752,"mtime":1607650943549,"results":"15","hashOfConfig":"13"},{"size":607,"mtime":1607391402992,"results":"16","hashOfConfig":"13"},{"size":486,"mtime":1607650943551,"results":"17","hashOfConfig":"13"},{"size":460,"mtime":1607650943551,"results":"18","hashOfConfig":"13"},{"size":8900,"mtime":1607653687608,"results":"19","hashOfConfig":"13"},{"size":871,"mtime":1607650943552,"results":"20","hashOfConfig":"13"},{"size":4550,"mtime":1607650943550,"results":"21","hashOfConfig":"13"},{"size":5791,"mtime":1607653687607,"results":"22","hashOfConfig":"13"},{"size":1646,"mtime":1607650943554,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1qq3601",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\sites\\juno\\bootcamp\\projects\\project6\\project6AmandaHansChristianBenZahra\\src\\index.js",[],["49","50"],"C:\\sites\\juno\\bootcamp\\projects\\project6\\project6AmandaHansChristianBenZahra\\src\\reportWebVitals.js",[],"C:\\sites\\juno\\bootcamp\\projects\\project6\\project6AmandaHansChristianBenZahra\\src\\App.js",["51","52","53","54","55"],"C:\\sites\\juno\\bootcamp\\projects\\project6\\project6AmandaHansChristianBenZahra\\src\\firebase.js",[],"C:\\sites\\juno\\bootcamp\\projects\\project6\\project6AmandaHansChristianBenZahra\\src\\components\\Header.js",[],"C:\\sites\\juno\\bootcamp\\projects\\project6\\project6AmandaHansChristianBenZahra\\src\\components\\Footer.js",[],"C:\\sites\\juno\\bootcamp\\projects\\project6\\project6AmandaHansChristianBenZahra\\src\\components\\SearchGifs.js",["56","57"],"C:\\sites\\juno\\bootcamp\\projects\\project6\\project6AmandaHansChristianBenZahra\\src\\components\\Home.js",[],"C:\\sites\\juno\\bootcamp\\projects\\project6\\project6AmandaHansChristianBenZahra\\src\\components\\DisplayMeme.js",["58"],"import firebase from \"../firebase.js\";\r\nimport { Component } from \"react\";\r\nimport Header from \"./Header\";\r\nimport UserMeme from \"../components/UserMeme.js\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { faThumbsDown, faThumbsUp } from \"@fortawesome/free-solid-svg-icons\";\r\n// import { faThumbsDown , faThumbsUp } from \"@fortawesome/free-regular-svg-icons\";\r\n\r\nlibrary.add(faThumbsDown, faThumbsUp);\r\n\r\nclass DisplayMeme extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      ogMemeArray: [],\r\n      userMemeSearch: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    firebase.database().ref();\r\n    const dbRef = firebase.database().ref();\r\n\r\n    dbRef.on(\"value\", (data) => {\r\n      const firebaseDataObj = data.val();\r\n\r\n      let memeArray = [];\r\n\r\n      for (let propertyKey in firebaseDataObj) {\r\n        const formattedObj = {\r\n          propertyKey: propertyKey,\r\n          topText: firebaseDataObj[propertyKey].memeTopText,\r\n          bottomText: firebaseDataObj[propertyKey].memeBottomText,\r\n          image: firebaseDataObj[propertyKey].memeImage,\r\n          alt: firebaseDataObj[propertyKey].memeAltText,\r\n          tags: firebaseDataObj[propertyKey].memeTags,\r\n          date: firebaseDataObj[propertyKey].memeDate,\r\n          likes: firebaseDataObj[propertyKey].memeLikes,\r\n          dislikes: firebaseDataObj[propertyKey].memeDislikes,\r\n          totalVotes: firebaseDataObj[propertyKey].memeTotalVotes,\r\n        };\r\n\r\n        memeArray.push(formattedObj);\r\n\r\n        memeArray.sort(callback);\r\n        function callback(a, b) {\r\n          return new Date(b.date) - new Date(a.date);\r\n        }\r\n      }\r\n\r\n      this.setState({\r\n        ogMemeArray: memeArray,\r\n      });\r\n    });\r\n  }\r\n\r\n  handleMemeInputChange = (e) => {\r\n    console.log(e.target.value);\r\n\r\n    this.setState({\r\n      userMemeSearch: e.target.value.toLowerCase(),\r\n    });\r\n  };\r\n\r\n  handleMemeSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    let elements = document.getElementsByClassName(\"eachMemeStyleContainer\");\r\n\r\n    for (let i = 0; i < elements.length; i++) {\r\n      elements[i].style.display = \"none\";\r\n    }\r\n\r\n    let nextElement = document.getElementsByClassName(\r\n      `${this.state.userMemeSearch}`\r\n    );\r\n\r\n    for (let n = 0; n < nextElement.length; n++) {\r\n      nextElement[n].style.display = \"flex\";\r\n    }\r\n\r\n    document.getElementById(\"memeHeader\").querySelector(\".memeHeaderChange\").innerHTML = `${this.state.userMemeSearch}`; \r\n\r\n  };\r\n\r\n  upVote = (propertyKey, likes, totalVotes) => {\r\n    const dbRef = firebase.database().ref();\r\n\r\n    dbRef.child(propertyKey).update({\r\n      memeLikes: likes + 1,\r\n      memeTotalVotes: totalVotes + 1,\r\n    });\r\n  };\r\n\r\n  downVote = (propertyKey, dislikes, totalVotes) => {\r\n    const dbRef = firebase.database().ref();\r\n\r\n    dbRef.child(propertyKey).update({\r\n      memeDislikes: dislikes + 1,\r\n      memeTotalVotes: totalVotes - 1,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      \r\n      <div>\r\n        <Header headerText=\"Meme in a Giffy\" subheaderText=\"\" />\r\n\r\n        {/* Search Memes */}\r\n        <form\r\n          className=\"flexbox\"\r\n          id=\"memeSearchBar\"\r\n          onSubmit={this.handleMemeSubmit}\r\n        >\r\n          <label htmlFor=\"memeSearch\" className=\"srOnly\">\r\n            Search for Meme:\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"memeSearch\"\r\n            name=\"userMemeSearch\"\r\n            placeholder=\"Search Memes\"\r\n            required\r\n            onChange={this.handleMemeInputChange}\r\n          />\r\n          <button>Search</button>\r\n        </form>\r\n\r\n        <h4 id=\"memeHeader\"><span className=\"memeHeaderChange\">Most Recent</span> Memes</h4>\r\n\r\n        <ul className=\"eachMemeStyle\">\r\n          {this.state.ogMemeArray.map((eachMeme) => {\r\n            return (\r\n              <UserMeme\r\n                propertyKey={eachMeme.propertyKey}\r\n                topText={eachMeme.topText}\r\n                bottomText={eachMeme.bottomText}\r\n                image={eachMeme.image}\r\n                alt={eachMeme.alt}\r\n                tags={eachMeme.tags}\r\n                likes={eachMeme.likes}\r\n                dislikes={eachMeme.dislikes}\r\n                totalVotes={eachMeme.totalVotes}\r\n                upVoteHandler={this.upVote}\r\n                downVoteHandler={this.downVote}\r\n              />\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DisplayMeme;\r\n","C:\\sites\\juno\\bootcamp\\projects\\project6\\project6AmandaHansChristianBenZahra\\src\\components\\MemeCreator.js",["59"],"\r\nimport { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport firebase from '../firebase.js';\r\n\r\nclass MemeCreator extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            userMemes:'',\r\n            userTopText: '',\r\n            userBottomText: '',\r\n            likes: 0,\r\n            dislikes: 0,\r\n            total: 0\r\n        }\r\n    }\r\n\r\n    handleInputChangeTopText = (e) => {\r\n        this.setState({\r\n            userTopText: e.target.value\r\n        })\r\n    }\r\n\r\n    handleInputChangeBottomText = (e) => {\r\n        this.setState({\r\n            userBottomText: e.target.value\r\n        })\r\n    }\r\n\r\n    userGeneratedMemes = (e) =>{\r\n        e.preventDefault();\r\n\r\n        const dbRef = firebase.database().ref();\r\n\r\n        const time = document.getElementById('date').value = Date();\r\n\r\n        const userTagsInput = this.tags.value;\r\n        const userMemeTags = userTagsInput.split(/[\\s,]+/);\r\n        const userMeme = {\r\n            memeImage:this.props.gifUrlProps,\r\n            memeAltText:this.props.gifAltProps,\r\n            memeDate:time,\r\n            memeTopText:this.topText.value,\r\n            memeBottomText:this.bottomText.value,\r\n            memeTags:userMemeTags,\r\n            memeLikes:this.state.likes,\r\n            memeDislikes: this.state.dislikes, \r\n            memeTotalVotes:this.state.total,\r\n        }\r\n\r\n        this.topText.value = ''\r\n        this.bottomText.value = ''\r\n        this.tags.value = ''\r\n\r\n        dbRef.push(userMeme);\r\n\r\n        this.setState({\r\n            userMemes:userMeme,\r\n        })\r\n\r\n        // clear the elements associated with the create meme page and display the button allowing user to view created meme\r\n        // fires when user submits their created meme\r\n        document.getElementById(\"selectedGif\").style.display = \"none\";\r\n        document.getElementById(\"createMemeForm\").style.display = \"none\";\r\n        document.getElementById('displayedGifsId').style.marginTop = '20px';\r\n        document.getElementById('searchGifId').style.display = 'flex';\r\n        document.getElementById('postCreationMeme').style.display = 'flex';\r\n    }\r\n\r\n    // function to hide the create meme section. function fires when user selects anywhere on the screen that is NOT in the create meme section\r\n    hideCreateMemeSection = (e) => {\r\n        if (e.target.id === \"createMemeSection\") {\r\n            this.closeMemeSection();\r\n        }\r\n    }\r\n\r\n    // function that runs to hide everything create meme related, and show everything that's relevant to the search gif page, fires when user selects the X button\r\n    closeMemeSection = () => {\r\n        document.getElementById(\"createMemeSection\").style.display = \"none\";\r\n        document.getElementById('header').style.display = 'flex';\r\n        document.getElementById('displayedGifsId').style.marginTop = '20px';\r\n        document.getElementById('searchGifId').style.display = 'flex';\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n\r\n            <div className=\"createMemeSection\" id=\"createMemeSection\" onClick={this.hideCreateMemeSection}>\r\n\r\n                <div className=\"wrapperCreateMemePage\">\r\n                    <div className=\"buttonContainer\">\r\n                        <button className=\"closeMemeButton\" onClick={this.closeMemeSection}>X</button>\r\n                    </div>\r\n\r\n                    <div className=\"gifAndForm\" id=\"gifAndForm\">\r\n\r\n                        <div className=\"selectedGif\" id=\"selectedGif\">\r\n                            <h5 className=\"memeText memeTextTop\">{this.state.userTopText}</h5>\r\n                            <img src={this.props.gifUrlProps} alt={this.props.gifAltProps} />\r\n                            <h5 className=\"memeText memeTextBottom\">{this.state.userBottomText}</h5>\r\n                        </div>\r\n\r\n                        {/* post creation screen - gets displayed after user submits meme */}\r\n                        <div className=\"postCreationMeme\" id=\"postCreationMeme\">\r\n                            <p className=\"creatingMemeText\">⚙Creating Your Meme Now⚙</p>\r\n                            <Link to={\"/search\"}>                         \r\n                                <button className=\"glow-on-hover searchGifButton\" type=\"button\">\r\n                                    View your Meme!\r\n                                </button>\r\n                            </Link>\r\n                        </div>\r\n\r\n                        <form action=\"\" onSubmit={this.userGeneratedMemes}                      \r\n                        className=\"createMemeForm\" id=\"createMemeForm\">\r\n\r\n                            <input className=\"srOnly\" id=\"date\" name=\"date\" className=\"hiddenDate\"></input>\r\n\r\n                            <label htmlFor=\"topText\">Top Text</label>\r\n                            <input type=\"text\" id=\"topText\" className=\"userInput\" required placeholder=\"Top Text\" maxLength=\"30\" ref={top => this.topText = top} onChange={this.handleInputChangeTopText}/>\r\n\r\n                            <label htmlFor=\"bottomText\">Bottom Text</label>\r\n                            <input type=\"text\" id=\"bottomText\" className=\"userInput\" required placeholder=\"Bottom Text\" maxLength=\"30\" ref={bottom => this.bottomText = bottom} onChange={this.handleInputChangeBottomText}/>\r\n\r\n                            <label htmlFor=\"tags\">Tags</label>\r\n                            <input type=\"text\" id=\"tags\" className=\"userInput\" required placeholder=\"Separate tags by commas or spaces\" ref={tags => this.tags = tags} />\r\n\r\n                            <input type=\"submit\" className=\"submit\" value=\"Submit!\" ></input>\r\n                        </form>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MemeCreator;\r\n","C:\\sites\\juno\\bootcamp\\projects\\project6\\project6AmandaHansChristianBenZahra\\src\\components\\UserMeme.js",[],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":1,"column":21,"nodeType":"66","messageId":"67","endLine":1,"endColumn":29},{"ruleId":"64","severity":1,"message":"68","line":3,"column":8,"nodeType":"66","messageId":"67","endLine":3,"endColumn":16},{"ruleId":"64","severity":1,"message":"69","line":5,"column":8,"nodeType":"66","messageId":"67","endLine":5,"endColumn":13},{"ruleId":"64","severity":1,"message":"70","line":6,"column":8,"nodeType":"66","messageId":"67","endLine":6,"endColumn":14},{"ruleId":"64","severity":1,"message":"71","line":7,"column":8,"nodeType":"66","messageId":"67","endLine":7,"endColumn":19},{"ruleId":"64","severity":1,"message":"72","line":6,"column":27,"nodeType":"66","messageId":"67","endLine":6,"endColumn":33},{"ruleId":"64","severity":1,"message":"73","line":6,"column":35,"nodeType":"66","messageId":"67","endLine":6,"endColumn":40},{"ruleId":"64","severity":1,"message":"74","line":4,"column":10,"nodeType":"66","messageId":"67","endLine":4,"endColumn":25},{"ruleId":"75","severity":1,"message":"76","line":118,"column":77,"nodeType":"77","endLine":118,"endColumn":99},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'firebase' is defined but never used.","'axios' is defined but never used.","'Header' is defined but never used.","'MemeCreator' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'FontAwesomeIcon' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]